#!/bin/sh
#
# A pre-commit hook to ensure code formatting with Spotless.
# Called by "git commit" with no arguments.

# Redirect output to stderr.
exec 1>&2

# Check if Spotless has been applied
echo "Running Spotless apply to format code..."
./mvnw spotless:apply

# If Spotless check fails, reject the commit
if [ $? -ne 0 ]; then
    echo "Spotless check failed. Please run 'mvn spotless:apply' to format your code."
    exit 1
fi

# Continue with existing checks in the script
if git rev-parse --verify HEAD >/dev/null 2>&1
then
    against=HEAD
else
    # Initial commit: diff against an empty tree object
    against=$(git hash-object -t tree /dev/null)
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --type=bool hooks.allownonascii)

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ "$allownonascii" != "true" ] &&
    test $(git diff-index --cached --name-only --diff-filter=A -z $against |
    LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
    cat <<\EOF
Error: Attempt to add a non-ASCII file name.

This can cause problems if you want to work with people on other platforms.

To be portable it is advisable to rename the file.

If you know what you are doing you can disable this check using:

  git config hooks.allownonascii true
EOF
    exit 1
fi

# If there are whitespace errors, print the offending file names and fail.
exec git diff-index --check --cached $against --
